<Project>
  <Import Project="common.props" />
  <Import Project="platform.props" />

  <Target Name="BuildMetapackage" DependsOnTargets="ResolveRepoInfo">
    <!-- Clear working directory -->
    <RemoveDir Directories="$(_WorkRoot)" />

    <!-- Move to working dir -->
    <PropertyGroup>
      <MetapackageWorkDirectory>$(_WorkRoot)Microsoft.AspNetCore.All\</MetapackageWorkDirectory>
    </PropertyGroup>
    <ItemGroup>
      <AllMetapackageFiles Include="$(_AllMetapackageDir)**\*" />
    </ItemGroup>

    <Copy SourceFiles="@(AllMetapackageFiles)" DestinationFolder="$(MetapackageWorkDirectory)\%(RecursiveDir)" />
    <Copy SourceFiles="$(_SrcDir)Directory.Build.props" DestinationFolder="$(_WorkRoot)" />

    <!-- Add references to project -->
    <RepoTasks.AddMetapackageReferences
      ReferencePackagePath="$(MetapackageWorkDirectory)Microsoft.AspNetCore.All.csproj"
      BuildArtifacts="@(ArtifactInfo)"
      PackageArtifacts="@(PackageArtifact)"
      ExternalDependencies="@(ExternalDependency)" />

    <!-- Set _Target=Restore so the project will be re-evaluated to include Internal.AspNetCore.Sdk MSBuild properties on the next step. -->
    <MSBuild Projects="$(MetapackageWorkDirectory)Microsoft.AspNetCore.All.csproj"
      Targets="Restore"
      Properties="Configuration=$(Configuration);DotNetRestoreSourcePropsPath=$(GeneratedRestoreSourcesPropsPath);AspNetUniverseBuildOffline=true;_Target=Restore" />

    <!-- Pack -->
    <MSBuild Projects="$(MetapackageWorkDirectory)Microsoft.AspNetCore.All.csproj"
      Targets="Pack"
      Properties="Configuration=$(Configuration);DotNetRestoreSourcePropsPath=$(GeneratedRestoreSourcesPropsPath);AspNetUniverseBuildOffline=true" />

    <!-- Copy to output directory -->
    <ItemGroup>
      <AllMetapackageNupkgFile Include="$(MetapackageWorkDirectory)**\*.nupkg" />
    </ItemGroup>

    <Copy SourceFiles="@(AllMetapackageNupkgFile)" DestinationFolder="$(BuildDir)" />
  </Target>

  <Target Name="GetLatestCommitHash">
    <!-- Get the latest commit hash -->
    <Exec Command="git rev-parse HEAD 2>&amp;1" StandardOutputImportance="Low" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="LatestCommit" />
      <Output TaskParameter="ExitCode" PropertyName="LatestCommitExitCode" />
    </Exec>
    <!-- We shouldn't fail the build if we can't retreive the commit hash, so in this case just set it to N/A -->
    <PropertyGroup Condition="'$(LatestCommitExitCode)'!='0'">
      <LatestCommit>N/A</LatestCommit>
    </PropertyGroup>
  </Target>

  <Target Name="BuildPlatform" DependsOnTargets="GetLatestCommitHash">
    <Error Text="Please specify the RID for the aspnetcore platform via PlatformRID: {win7-x64|win7-x86|osx-x64|linux-x64}." Condition="'$(PlatformRID)' == ''"/>

    <!-- Clear working directory -->
    <RemoveDir Directories="$(_WorkRoot)" />

    <PropertyGroup>
      <PlatformWorkDirectory>$(_WorkRoot)Platform\</PlatformWorkDirectory>
      <PlatformOutputDirectory>$(_WorkRoot)Publish\</PlatformOutputDirectory>
      <PlatformPublishDirectory>$(PlatformOutputDirectory)shared\Microsoft.AspNetCore.All\$(PackageVersion)\</PlatformPublishDirectory>

      <_PlatformProps>Configuration=$(Configuration);RuntimeIdentifier=$(PlatformRID)</_PlatformProps>
      <_PlatformProps>$(_PlatformProps);RuntimeFrameworkVersion=$(MicrosoftNETCoreApp20PackageVersion)</_PlatformProps>
      <_PlatformProps>$(_PlatformProps);DotNetRestoreSourcePropsPath=$(GeneratedRestoreSourcesPropsPath)</_PlatformProps>
      <_PlatformProps>$(_PlatformProps);AspNetUniverseBuildOffline=true</_PlatformProps>
    </PropertyGroup>

    <!-- Move to working dir -->
    <ItemGroup>
      <PlatformFiles Include="$(_TemplatesDir)Platform\**\*" />
    </ItemGroup>

    <Copy SourceFiles="@(PlatformFiles)" DestinationFolder="$(PlatformWorkDirectory)\%(RecursiveDir)" />
    <Copy SourceFiles="$(_SrcDir)Directory.Build.props" DestinationFolder="$(_WorkRoot)" />

    <!-- Set _Target=Restore so the project will be re-evaluated to include Internal.AspNetCore.Sdk MSBuild properties on the next step. -->
    <MSBuild Projects="$(PlatformWorkDirectory)Platform.csproj"
      Targets="Restore"
      Properties="$(_PlatformProps);MicrosoftAspNetCoreAllVersion=$(PackageVersion);_Target=Restore" />

    <!-- Publish -->
    <MSBuild Projects="$(PlatformWorkDirectory)Platform.csproj"
      Targets="Publish"
      Properties="$(_PlatformProps);GenerateRuntimeConfigurationFiles=true;SelfContained=false;PublishDir=$(PlatformPublishDirectory)" />

    <!-- Clean deps.json -->
    <RepoTasks.TrimDeps DepsFiles="$(PlatformPublishDirectory)/Platform.deps.json" />

    <!-- Clean up artifacts that publish generates which we don't need -->
    <ItemGroup>
      <ToDelete Include="$(PlatformPublishDirectory)\Platform" />
      <ToDelete Include="$(PlatformPublishDirectory)\Platform.dll" />
      <ToDelete Include="$(PlatformPublishDirectory)\Platform.pdb" />
    </ItemGroup>

    <Delete Files="@(ToDelete)" />

    <!-- Rename deps file -->
    <Move SourceFiles="$(PlatformPublishDirectory)\Platform.deps.json"
          DestinationFiles="$(PlatformPublishDirectory)\Microsoft.AspNetCore.All.deps.json" />

    <!-- Rename runtimeconfig.json file -->
    <Move SourceFiles="$(PlatformPublishDirectory)\Platform.runtimeconfig.json"
          DestinationFiles="$(PlatformPublishDirectory)\Microsoft.AspNetCore.All.runtimeconfig.json" />

    <!-- Generate Runtime Graph -->
    <PropertyGroup>
      <RuntimeGraphGeneratorRuntime Condition="$([MSBuild]::IsOSPlatform('Windows'))">win</RuntimeGraphGeneratorRuntime>
      <RuntimeGraphGeneratorRuntime Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux</RuntimeGraphGeneratorRuntime>
      <RuntimeGraphGeneratorRuntime Condition="$([MSBuild]::IsOSPlatform('OSX'))">osx</RuntimeGraphGeneratorRuntime>
    </PropertyGroup>

    <ItemGroup>
      <PlatformAssetsFile Include="$(PlatformWorkDirectory)**\project.assets.json" />
    </ItemGroup>

    <ProcessSharedFrameworkDeps
      AssetsFilePath="@(PlatformAssetsFile)"
      DepsFilePath="$(PlatformPublishDirectory)\Microsoft.AspNetCore.All.deps.json"
      Runtime="$(RuntimeGraphGeneratorRuntime)" />

    <!-- Generate .version file -->
    <ItemGroup>
      <VersionLines Include="$(LatestCommit)" />
      <VersionLines Include="$(PackageVersion)" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(PlatformPublishDirectory)\.version"
      Lines="@(VersionLines)"
      Overwrite="true" />

    <ItemGroup>
      <OutputZipFiles Include="$(PlatformOutputDirectory)**\*" />
    </ItemGroup>

    <!-- Create archive -->
    <ZipArchive
      File="$(ArtifactsDir)aspnetcore-shared-$(PackageVersion)-$(PlatformRID).zip"
      SourceFiles="@(OutputZipFiles)"
      WorkingDirectory="$(PlatformOutputDirectory)"
      Overwrite="true"
      Condition="$([MSBuild]::IsOSPlatform('Windows'))"/>
    <Exec
      Command="tar -czf $(ArtifactsDir)aspnetcore-shared-$(PackageVersion)-$(PlatformRID).tar.gz -C $(PlatformOutputDirectory) ."
      WorkingDirectory="$(PlatformOutputDirectory)"
      Condition="$([MSBuild]::IsOSPlatform('Linux')) OR $([MSBuild]::IsOSPlatform('OSX'))"/>

  </Target>
</Project>
